CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: general-vs:vert # builtin header
      frag: rimlight-fs:frag
      properties: &props
        mainTexture:    { value: white } 
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }    
        rimLightColor:  { value: [1.0, 1.0, 1.0], target: rimColor.rgb, editor: { displayName: Rim Color, type: color } }
        rimIntensity:  { value: 1.0, target: rimColor.a, editor: {slide: true, range: [0, 10], step: 0.1}}   

}%

CCProgram rimlight-fs %{
precision highp float;
#include <builtin/uniforms/cc-global>
#include <legacy/output>
#include <legacy/fog-fs>

in vec2 v_uv;
in vec3 v_normal;
in vec3 v_position;

uniform sampler2D mainTexture;

uniform Constant {
  vec4 mainColor;
  vec4 rimColor;
};
vec4 frag() {
  vec3 normal = normalize(v_normal);
  vec3 viewDirection = cc_cameraPos.xyz - v_position;
  vec3 normalizedViewDirection = normalize(viewDirection);
  float rimPower = 1.0 - max(dot(normal, normalizedViewDirection), 0.0);
  vec4 col = mainColor * texture(mainTexture, v_uv);
  float rimIntensity = rimColor.a;
  col.rgb += pow(rimPower, rimIntensity) * rimColor.rgb;
  CC_APPLY_FOG(col, v_position);
  return CCFragOutput(col);
}
}%